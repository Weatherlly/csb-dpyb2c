{"version":3,"sources":["components/Card.module.css","components/DisplayCard.module.css","components/Card.js","components/DisplayCard.js","components/OptionGroup.js","functions/random.js","functions/sortPokemon.js","App.js","functions/convertObjToArrayObj.js","functions/checkAttribute.js","functions/applyFilter.js","functions/getAttrStyle.js","index.js"],"names":["module","exports","Card","name","sprite","sortedPokemon","Restart","className","style","moldura","figura","src","alt","legenda","value","btnGuess","onClick","e","confirm","alert","target","DisplayCard","data","restart","display","map","pkmn","OptionGroup","chave","valores","id","label","valor","toString","randomIntFromInterval","min","max","Math","floor","random","sortPokemon","pokemon","sortedId","length","filter","_","idx","App","useState","appliedFilters","setAppliedFilters","noQuestions","setNoQuestions","pokemonList","setPokemonList","valorDoSelect","setValorDoSelect","tipoDoSelect","setTipoDoSelect","parsedFilters","obj","keys","Object","values","arrayObjects","index","push","convertObjtoArrayObj","filters","onChange","attribute","result","types","includes","color","habitat","shape","generation","checkAttribute","key","attr","correct","isLegendary","console","log","applyFilter","item","res","margin","padding","radius","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.0fc8810c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moldura\":\"Card_moldura__3gJ6c\",\"figura\":\"Card_figura__1TcEh\",\"sprite\":\"Card_sprite__1UIog\",\"legenda\":\"Card_legenda__L6r_s\",\"btnGuess\":\"Card_btnGuess__1OZqJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"DisplayCard_display__koySV\"};","import style from \"./Card.module.css\";\r\nimport CorrectAnswer from \"../functions/correctAnswer\";\r\nimport WrongAnswer from \"../functions/wrongAnswer\";\r\n\r\nexport default function Card({ name, sprite, sortedPokemon, Restart }) {\r\n  // console.log(Restart)\r\n  const eventListener = (e) => {\r\n    if (confirm(\"Are you sure?\")) {\r\n      alert(\"I choose you, \" + e.target.value + \"!\");\r\n      if (sortedPokemon[0].name === e.target.value) {\r\n        alert(\"CORRECT!\");\r\n      } else {\r\n        alert(`WRONG! The right answer was ${sortedPokemon[0].name}!`);\r\n      }\r\n      Restart();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.moldura}>\r\n      <figure className={style.figura}>\r\n        <img className={style.sprite} src={sprite} alt={name} />\r\n        <figcaption className={style.legenda}>{name}</figcaption>\r\n        <button value={name} className={style.btnGuess} onClick={eventListener}>\r\n          I choose you!\r\n        </button>\r\n      </figure>\r\n    </div>\r\n  );\r\n}\r\n","import Card from \"./Card\";\r\nimport style from \"./DisplayCard.module.css\";\r\n\r\nexport default function DisplayCard({ data, sortedPokemon, restart }) {\r\n  return (\r\n    <div className={style.display}>\r\n      {data.map((pkmn) => (\r\n        <Card\r\n          name={pkmn.name}\r\n          sprite={pkmn.sprite}\r\n          sortedPokemon={sortedPokemon}\r\n          Restart={restart}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export default function OptionGroup({ chave, valores }) {\r\n  return (\r\n    <optgroup id={chave} label={chave}>\r\n      {valores.map((valor) => (\r\n        <option value={valor}>{valor.toString()}</option>\r\n      ))}\r\n    </optgroup>\r\n  );\r\n}\r\n","function randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default randomIntFromInterval;\n","import randomIntFromInterval from \"./random\";\n\nfunction sortPokemon(pokemon) {\n  const sortedId = randomIntFromInterval(1, pokemon.length);\n  const sortedPokemon = pokemon.filter((_, idx) => idx === sortedId);\n  return sortedPokemon;\n}\n\nexport default sortPokemon;\n","import \"./styles/globals.css\";\nimport \"./styles/app.css\";\nimport \"./styles.css\";\nimport DisplayCard from \"./components/DisplayCard\";\nimport OptionGroup from \"./components/OptionGroup\";\nimport pokemon from \"./db/pokemon1_3.json\";\nimport filters from \"./db/filters.json\";\nimport { useState } from \"react\";\nimport sortPokemon from \"./functions/sortPokemon\";\nimport convertObjtoArrayObj from \"./functions/convertObjToArrayObj\";\nimport checkAttribute from \"./functions/checkAttribute\";\nimport applyFilter from \"./functions/applyFilter\";\nimport getAttrStyle from \"./functions/getAttrStyle\";\n\nlet sortedPokemon = sortPokemon(pokemon);\nexport default function App() {\n  const [appliedFilters, setAppliedFilters] = useState([]);\n  const [noQuestions, setNoQuestions] = useState(0);\n  const [pokemonList, setPokemonList] = useState(pokemon);\n  const [valorDoSelect, setValorDoSelect] = useState(\"grass\");\n  const [tipoDoSelect, setTipoDoSelect] = useState(\"types\");\n  const parsedFilters = convertObjtoArrayObj(filters);\n  const handleOnChange = (e) => {\n    setValorDoSelect(e.target.value);\n    setTipoDoSelect(checkAttribute(e.target.value));\n  };\n\n  const applySelectedFilter = (e) => {\n    applyFilter(\n      valorDoSelect,\n      tipoDoSelect,\n      sortedPokemon,\n      pokemonList,\n      setPokemonList,\n      appliedFilters,\n      setAppliedFilters,\n      noQuestions,\n      setNoQuestions\n    );\n  };\n\n  const Restart = () => {\n    setPokemonList(pokemon);\n    setAppliedFilters([]);\n    setNoQuestions(0);\n    sortedPokemon = sortPokemon(pokemon);\n  };\n\n  return (\n    <>\n      <main>\n        <aside className=\"question-section\">\n          <button onClick={Restart} className=\"filled-button\">\n            RESTART\n          </button>\n          <div className=\"guess-who\">\n            <h1>?</h1>\n            <div className=\"guess-who__spans\">\n              <spam>Who's that</spam>\n              <spam>Pokemon!</spam>\n            </div>\n          </div>\n          <h2>Does the Pokemon have:</h2>\n          <select value={valorDoSelect} onChange={handleOnChange}>\n            {parsedFilters.map((key) => (\n              <OptionGroup\n                chave={Object.keys(key)[0]}\n                valores={Object.values(key)[0]}\n              />\n            ))}\n          </select>\n          <button className=\"filled-button\" onClick={applySelectedFilter}>\n            FIND OUT\n          </button>\n          <div className=\"menu-below\">\n            <div>Pokemons left: {pokemonList.length}</div>\n            <div>Questions asked: {noQuestions}</div>\n            <span>Question history:</span>\n            <ul className=\"respostas\">\n              {appliedFilters.map((item) => (\n                <li style={getAttrStyle(item.correct)}>{item.attr}</li>\n              ))}\n            </ul>\n            <div></div>\n          </div>\n        </aside>\n        <section className=\"board-wrapper\">\n          <DisplayCard\n            data={pokemonList}\n            sortedPokemon={sortedPokemon}\n            restart={Restart}\n          />\n          {/* {listaPokemons.map((pokemon) => (\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<img src={pokemon.sprite}></img>\n\t\t\t\t\t\t\t\t<p className=\"card-p\">{pokemon.name}</p>\n\t\t\t\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t\t\t\t<p>${pokemon.name}</p>\n\t\t\t\t\t\t\t\t\t<div class=\"guess\">\n\t\t\t\t\t\t\t\t\t\t<span>Guess on {pokemon.name}?</span>\n\t\t\t\t\t\t\t\t\t\t<button class=\"filled-button small\">\n\t\t\t\t\t\t\t\t\t\t\tGuess\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))} */}\n        </section>\n      </main>\n    </>\n  );\n}\n","export default function convertObjToArrayObjs(obj) {\r\n  const keys = Object.keys(obj);\r\n  const values = Object.values(obj);\r\n  let arrayObjects = [];\r\n\r\n  for (let index = 0; index < keys.length; index++) {\r\n    let obj = {};\r\n    obj[keys[index]] = values[index];\r\n    arrayObjects.push(obj);\r\n  }\r\n  return arrayObjects;\r\n}\r\n","import filters from \"../db/filters.json\";\n\nexport default function checkAttribute(attribute) {\n  let result = \"\";\n  let lorem = \"\";\n  filters.types.includes(attribute) ? (result = \"types\") : (lorem = \"\");\n  filters.color.includes(attribute) ? (result = \"color\") : (lorem = \"\");\n  filters.habitat.includes(attribute) ? (result = \"habitat\") : (lorem = \"\");\n  filters.shape.includes(attribute) ? (result = \"shape\") : (lorem = \"\");\n  filters.generation.includes(attribute)\n    ? (result = \"generation\")\n    : (lorem = \"\");\n  if (attribute === \"true\" || attribute === \"false\") {\n    result = \"isLegendary\";\n  }\n  return result;\n}\n","export default function applyFilter(\n  valorDoSelect,\n  tipoDoSelect,\n  sortedPokemon,\n  pokemonList,\n  setPokemonList,\n  appliedFilters,\n  setAppliedFilters,\n  noQuestions,\n  setNoQuestions\n) {\n  setNoQuestions(noQuestions + 1);\n  switch (tipoDoSelect) {\n    case \"color\":\n      if (sortedPokemon[0].color === valorDoSelect) {\n        setPokemonList(\n          pokemonList.filter(\n            (pokemon) => pokemon.color === sortedPokemon[0].color\n          )\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.color !== valorDoSelect)\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    case \"habitat\":\n      if (sortedPokemon[0].habitat === valorDoSelect) {\n        setPokemonList(\n          pokemonList.filter(\n            (pokemon) => pokemon.habitat === sortedPokemon[0].habitat\n          )\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.habitat !== valorDoSelect)\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    case \"generation\":\n      if (sortedPokemon[0].generation === valorDoSelect) {\n        setPokemonList(\n          pokemonList.filter(\n            (pokemon) => pokemon.generation === sortedPokemon[0].generation\n          )\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.generation !== valorDoSelect)\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    case \"shape\":\n      if (sortedPokemon[0].shape === valorDoSelect) {\n        setPokemonList(\n          pokemonList.filter(\n            (pokemon) => pokemon.shape === sortedPokemon[0].shape\n          )\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.shape !== valorDoSelect)\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    case \"isLegendary\":\n      const isLegendary = valorDoSelect === \"true\" ? true : false;\n      if (sortedPokemon[0].isLegendary === isLegendary) {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.isLegendary === isLegendary)\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.isLegendary !== isLegendary)\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    case \"types\":\n      if (sortedPokemon[0].types.includes(valorDoSelect)) {\n        setPokemonList(\n          pokemonList.filter((pokemon) => pokemon.types.includes(valorDoSelect))\n        );\n        const res = { attr: valorDoSelect, correct: true };\n        setAppliedFilters([res, ...appliedFilters]);\n      } else {\n        setPokemonList(\n          pokemonList.filter(\n            (pokemon) => !pokemon.types.includes(valorDoSelect)\n          )\n        );\n        const res = { attr: valorDoSelect, correct: false };\n        setAppliedFilters([res, ...appliedFilters]);\n      }\n      break;\n\n    default:\n      console.log(\"Erro ao aplicar filtro!\");\n  }\n}\n","export default function getAtrStyle(res) {\n  let estilo = {};\n  if (res) {\n    estilo = {\n      margin: \"3px\",\n      padding: \"3px\",\n      color: \"rgb(135,217,132)\",\n      radius: \"5px\"\n    };\n  } else {\n    estilo = {\n      margin: \"3px\",\n      padding: \"3px\",\n      color: \"rgb(247,139,139)\",\n      radius: \"5px\"\n    };\n  }\n  return estilo;\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}